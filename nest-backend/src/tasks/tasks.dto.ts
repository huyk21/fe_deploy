import {
  IsString,
  IsDateString,
  IsNumber,
  IsOptional,
  IsEnum,
} from 'class-validator';

export enum TaskStatus {
  PENDING = 'pending',
  IN_PROGRESS = 'in-progress',
  COMPLETED = 'completed',
  EXPIRED = 'expired'
}

export enum TaskPriority {
  LOW = 'low',
  MEDIUM = 'medium',
  HIGH = 'high',
}

export class CreateTaskDto {
  @IsString()
  id: string; // Task ID (usually generated by the backend)

  @IsString()
  userId: string; // User ID the task belongs to

  @IsString()
  title: string; // Task title

  @IsEnum(TaskStatus)
  status: TaskStatus; // Task status (e.g., "pending", "in-progress")

  @IsString()
  label: string; // Task label/category

  @IsEnum(TaskPriority)
  priority: TaskPriority; // Task priority (e.g., "low", "medium", "high")

  @IsString()
  description: string; // Task description

  @IsDateString()
  startDate: string; // Task start date in ISO format

  @IsDateString()
  endDate: string; // Task end date in ISO format

  @IsDateString()
  dueTime: string; // Task due time in ISO format

  @IsNumber()
  estimatedTime: number; // Estimated time in hours
}

export class UpdateTaskDto {
  @IsOptional()
  @IsString()
  id?: string; // Optional task ID (usually not updated)

  @IsOptional()
  @IsString()
  userId?: string; // Optional user ID (not typically updated)

  @IsOptional()
  @IsString()
  title?: string; // Optional task title update

  @IsOptional()
  @IsEnum(TaskStatus)
  status?: TaskStatus; // Optional task status update

  @IsOptional()
  @IsString()
  label?: string; // Optional task label/category update

  @IsOptional()
  @IsEnum(TaskPriority)
  priority?: TaskPriority; // Optional task priority update

  @IsOptional()
  @IsString()
  description?: string; // Optional task description update

  @IsOptional()
  @IsDateString()
  startDate?: string; // Optional task start date update

  @IsOptional()
  @IsDateString()
  endDate?: string; // Optional task end date update

  @IsOptional()
  @IsDateString()
  dueTime?: string; // Optional task due time update

  @IsOptional()
  @IsNumber()
  estimatedTime?: number; // Optional estimated time update
}
